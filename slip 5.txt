5.1

import nltk
from nltk.stem import WordNetLemmatizer
lemmatizer = WordNetLemmatizer()
def lemmatize_word(word):
    return lemmatizer.lemmatize(word)
word = input("Enter a word to lemmatize: ")
lemmatized_word = lemmatize_word(word)
print(f"Lemmatized word: {lemmatized_word}")

5.2

graph ={
    '1':['2','4'],
    '2':['3'],
    '3':['5','4','6'],
    '4':['2'],
    '5':['7','8'],
    '6':['8'],
    '7':['8'],
    '8':[ ]
}
visited = [] 
queue = []  
def bfs(visited, graph, node): 
  visited.append(node)
  queue.append(node)
    
  while queue: 
       m = queue.pop(0)
       print (m, end = " ")
        
       for neighbour in graph[m]:
          if neighbour not in visited:
            visited.append(neighbour)
            queue.append(neighbour)
print("Following is the Breadth-First Search")
bfs(visited, graph, '1') 

